-- MySQL Script generated by MySQL Workbench
-- Wed Mar 18 20:16:33 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema BrainNetwork_db
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema BrainNetwork_db
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `BrainNetwork_db` DEFAULT CHARACTER SET utf8 ;
USE `BrainNetwork_db` ;

-- -----------------------------------------------------
-- Table `BrainNetwork_db`.`User`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BrainNetwork_db`.`User` ;

CREATE TABLE IF NOT EXISTS `BrainNetwork_db`.`User` (
  `userid` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(255) NULL,
  `email` VARCHAR(255) NULL,
  `password` VARCHAR(255) NULL,
  `fname` VARCHAR(255) NULL,
  `lname` VARCHAR(255) NULL,
  `admin` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`userid`),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BrainNetwork_db`.`Room`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BrainNetwork_db`.`Room` ;

CREATE TABLE IF NOT EXISTS `BrainNetwork_db`.`Room` (
  `roomId` INT NOT NULL AUTO_INCREMENT,
  `roomName` VARCHAR(255) NULL,
  `boardLink` TEXT NULL,
  `openTime` TIMESTAMP NULL,
  `closedTime` TIMESTAMP NULL,
  PRIMARY KEY (`roomId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BrainNetwork_db`.`Meeting`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BrainNetwork_db`.`Meeting` ;

CREATE TABLE IF NOT EXISTS `BrainNetwork_db`.`Meeting` (
  `meetingId` INT NOT NULL AUTO_INCREMENT,
  `adminId` INT NULL,
  `subject` TEXT NULL DEFAULT NULL,
  `scheduledStart` TIMESTAMP NOT NULL,
  `scheduledEnd` TIMESTAMP NULL,
  `roomId` INT NULL DEFAULT NULL,
  PRIMARY KEY (`meetingId`),
  INDEX `adminId_idx` (`adminId` ASC),
  INDEX `FK_Meeting_Room_idx` (`roomId` ASC),
  CONSTRAINT `FK_Meeting_User`
    FOREIGN KEY (`adminId`)
    REFERENCES `BrainNetwork_db`.`User` (`userid`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `FK_Meeting_Room`
    FOREIGN KEY (`roomId`)
    REFERENCES `BrainNetwork_db`.`Room` (`roomId`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BrainNetwork_db`.`Group`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BrainNetwork_db`.`Group` ;

CREATE TABLE IF NOT EXISTS `BrainNetwork_db`.`Group` (
  `groupId` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `managerId` INT NULL,
  PRIMARY KEY (`groupId`),
  INDEX `FK_Group_User_idx` (`managerId` ASC),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC),
  CONSTRAINT `FK_Group_User`
    FOREIGN KEY (`managerId`)
    REFERENCES `BrainNetwork_db`.`User` (`userid`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BrainNetwork_db`.`Schedule`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BrainNetwork_db`.`Schedule` ;

CREATE TABLE IF NOT EXISTS `BrainNetwork_db`.`Schedule` (
  `meetingId` INT NOT NULL,
  `userid` INT NOT NULL,
  `groupId` INT NOT NULL,
  PRIMARY KEY (`meetingId`, `userid`, `groupId`),
  INDEX `FK_Schedule_User_idx` (`userid` ASC),
  INDEX `fk_Schedule_Group1_idx` (`groupId` ASC),
  CONSTRAINT `FK_Schedule_User`
    FOREIGN KEY (`userid`)
    REFERENCES `BrainNetwork_db`.`User` (`userid`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK_Schedule_Meeting`
    FOREIGN KEY (`meetingId`)
    REFERENCES `BrainNetwork_db`.`Meeting` (`meetingId`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK_Schedule_Group`
    FOREIGN KEY (`groupId`)
    REFERENCES `BrainNetwork_db`.`Group` (`groupId`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BrainNetwork_db`.`MeetingData`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BrainNetwork_db`.`MeetingData` ;

CREATE TABLE IF NOT EXISTS `BrainNetwork_db`.`MeetingData` (
  `meetingId` INT NOT NULL,
  `dataId` INT NOT NULL,
  `userId` INT NULL,
  `timeRecorded` DATETIME NULL,
  `filename` TEXT NULL,
  PRIMARY KEY (`meetingId`, `dataId`),
  INDEX `FK_MeetingData_User_idx` (`userId` ASC),
  CONSTRAINT `FK_MeetingData_Meeting`
    FOREIGN KEY (`meetingId`)
    REFERENCES `BrainNetwork_db`.`Meeting` (`meetingId`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK_MeetingData_User`
    FOREIGN KEY (`userId`)
    REFERENCES `BrainNetwork_db`.`User` (`userid`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BrainNetwork_db`.`UserGroup`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BrainNetwork_db`.`UserGroup` ;

CREATE TABLE IF NOT EXISTS `BrainNetwork_db`.`UserGroup` (
  `userid` INT NOT NULL,
  `groupId` INT NOT NULL,
  PRIMARY KEY (`userid`, `groupId`),
  INDEX `fk_User_has_Group_Group1_idx` (`groupId` ASC),
  INDEX `fk_User_has_Group_User1_idx` (`userid` ASC),
  CONSTRAINT `FK_UserGroup_User`
    FOREIGN KEY (`userid`)
    REFERENCES `BrainNetwork_db`.`User` (`userid`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK_UserGroup_Group`
    FOREIGN KEY (`groupId`)
    REFERENCES `BrainNetwork_db`.`Group` (`groupId`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

USE `BrainNetwork_db`;

DELIMITER $$

USE `BrainNetwork_db`$$
DROP TRIGGER IF EXISTS `BrainNetwork_db`.`setDataId` $$
USE `BrainNetwork_db`$$
CREATE TRIGGER setDataId BEFORE INSERT ON `MeetingData` FOR EACH ROW
BEGIN
	DECLARE meetingCount INTEGER;
    SELECT COUNT(meetingId) INTO @meetingCount FROM `MeetingData` WHERE meetingId = NEW.meetingId;
    INSERT INTO `MeetingData` VALUES(NEW.meetingId, @meetingCount+1, NEW.userId, NEW.timeRecorded, NEW.filename);
END$$


DELIMITER ;
SET SQL_MODE = '';
DROP USER IF EXISTS brainnetwork;
SET SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';
CREATE USER 'brainnetwork' IDENTIFIED BY 'stevenhamzatravis';

GRANT ALL ON `BrainNetwork_db`.* TO 'brainnetwork';

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
